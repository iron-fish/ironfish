name: Build NPM Packages

env:
  MACOSX_DEPLOYMENT_TARGET: '10.13'
  APPNAME: 'ironfish-rust-nodejs'

on:
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            architecture: x64
            build: |
              yarn build
              strip -x *.node
          - host: windows-latest
            build: yarn build
            target: x86_64-pc-windows-msvc
            architecture: x64
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            architecture: x64
            docker: |
              docker pull ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
              docker tag ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian builder
            build: |
              docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder yarn build && strip *.node
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            architecture: x64
            docker: |
              docker pull $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-alpine
              docker tag $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-alpine builder
            build: docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder yarn build && strip *.node
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              yarn build --target=aarch64-apple-darwin
              strip -x *.node
          - host: ubuntu-latest
            architecture: x64
            target: aarch64-unknown-linux-gnu
            setup: |
              sudo apt-get update
              sudo apt-get install g++-aarch64-linux-gnu gcc-aarch64-linux-gnu -y
            build: |
              yarn build --target=aarch64-unknown-linux-gnu
              aarch64-linux-gnu-strip *.node
          - host: ubuntu-latest
            architecture: x64
            target: aarch64-unknown-linux-musl
            downloadTarget: aarch64-unknown-linux-musl
            docker: |
              docker pull ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
              docker tag ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine builder
            build: |
              docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder sh -c "yarn build --target=aarch64-unknown-linux-musl && /aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip *.node"
    name: stable - ${{ matrix.settings.target }} - node@16
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: '16.13.0'
          cache: yarn
          architecture: ${{ matrix.settings.architecture }}

      - name: Install
        uses: actions-rs/toolchain@v1
        if: ${{ !matrix.settings.docker }}
        with:
          profile: minimal
          target: ${{ matrix.settings.target }}

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        if: ${{ !matrix.settings.docker }}
        with:
          command: generate-lockfile

      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash

      - name: Install dependencies
        run: yarn install --ignore-scripts --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

      - name: Build in Docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: -v ${{ env.HOME }}/.cargo/git:/root/.cargo/git -v ${{ env.HOME }}/.cargo/registry:/root/.cargo/registry -v ${{ github.workspace }}:/build -w /build
          run: ${{ matrix.settings.build }}

      - name: Build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ironfish-rust-nodejs/${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  # test-macOS-windows-binding:
  #   name: Test bindings on ${{ matrix.settings.target }} - node@${{ matrix.node }}
  #   needs:
  #     - build
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       settings:
  #         - host: macos-latest
  #           target: 'x86_64-apple-darwin'
  #         - host: windows-latest
  #           target: 'x86_64-pc-windows-msvc'
  #       node:
  #         - '16'
  #   runs-on: ${{ matrix.settings.host }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node }}
  #         check-latest: true
  #         cache: yarn
  #     - name: Cache NPM dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: npm-cache-test-${{ matrix.settings.target }}-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
  #     - name: Install dependencies
  #       run: yarn install --ignore-scripts --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: bindings-${{ matrix.settings.target }}
  #         path: .
  #     - name: List packages
  #       run: ls -R .
  #       shell: bash
  #     - name: Test bindings
  #       run: yarn test
  # test-linux-x64-gnu-binding:
  #   name: Test bindings on Linux-x64-gnu - node@${{ matrix.node }}
  #   needs:
  #     - build
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node:
  #         - '12'
  #         - '14'
  #         - '16'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node }}
  #         check-latest: true
  #         cache: yarn
  #     - name: Cache NPM dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: npm-cache-test-linux-x64-gnu-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
  #     - name: Install dependencies
  #       run: yarn install --ignore-scripts --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: bindings-x86_64-unknown-linux-gnu
  #         path: .
  #     - name: List packages
  #       run: ls -R .
  #       shell: bash
  #     - name: Test bindings
  #       run: docker run --rm -v $(pwd):/build -w /build node:${{ matrix.node }}-slim yarn test
  # test-linux-x64-musl-binding:
  #   name: Test bindings on x86_64-unknown-linux-musl - node@${{ matrix.node }}
  #   needs:
  #     - build
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node:
  #         - '12'
  #         - '14'
  #         - '16'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node }}
  #         check-latest: true
  #         cache: yarn
  #     - name: Cache NPM dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: npm-cache-test-x86_64-unknown-linux-musl-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
  #     - name: Install dependencies
  #       run: yarn install --ignore-scripts --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: bindings-x86_64-unknown-linux-musl
  #         path: .
  #     - name: List packages
  #       run: ls -R .
  #       shell: bash
  #     - name: Test bindings
  #       run: docker run --rm -v $(pwd):/build -w /build node:${{ matrix.node }}-alpine yarn test
  # test-linux-aarch64-gnu-binding:
  #   name: Test bindings on aarch64-unknown-linux-gnu - node@${{ matrix.node }}
  #   needs:
  #     - build
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node:
  #         - '12'
  #         - '14'
  #         - '16'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
  #     - uses: actions/checkout@v2
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: bindings-aarch64-unknown-linux-gnu
  #         path: .
  #     - name: List packages
  #       run: ls -R .
  #       shell: bash
  #     - name: Cache NPM dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: npm-cache-test-linux-aarch64-gnu-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
  #     - name: Install dependencies
  #       run: yarn install --ignore-scripts --ignore-platform --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000
  #     - name: Setup and run tests
  #       uses: addnab/docker-run-action@v3
  #       with:
  #         image: ghcr.io/napi-rs/napi-rs/nodejs:aarch64-${{ matrix.node }}
  #         options: '-v ${{ github.workspace }}:/build -w /build'
  #         run: |
  #           set -e
  #           yarn test
  #           ls -la
  # test-linux-aarch64-musl-binding:
  #   name: Test bindings on aarch64-unknown-linux-musl - node@${{ matrix.node }}
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
  #     - uses: actions/checkout@v2
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: bindings-aarch64-unknown-linux-musl
  #         path: .
  #     - name: List packages
  #       run: ls -R .
  #       shell: bash
  #     - name: Cache NPM dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: npm-cache-test-linux-aarch64-musl-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
  #     - name: Install dependencies
  #       run: yarn install --ignore-scripts --ignore-platform --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000
  #     - name: Setup and run tests
  #       uses: addnab/docker-run-action@v3
  #       with:
  #         image: multiarch/alpine:aarch64-latest-stable
  #         options: '-v ${{ github.workspace }}:/build -w /build'
  #         run: |
  #           set -e
  #           apk add nodejs npm yarn
  #           yarn test
