name: Deploy @ironfish/rust-nodejs NPM Packages

env:
  DEBUG: 'napi:*'
  MACOSX_DEPLOYMENT_TARGET: '10.13'

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            architecture: x64
            build: |
              cd ironfish-rust-nodejs
              yarn build
              strip -x *.node

          - host: windows-latest
            target: x86_64-pc-windows-msvc
            architecture: x64
            build: cd ironfish-rust-nodejs && yarn build

          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            architecture: x64
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust@sha256:c9735923823026d494a3e544818911e187d0d014e8ac01bdf3bbd62efe5ee0d2
            build: cd ironfish-rust-nodejs && yarn build && strip *.node

          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            architecture: x64
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust@sha256:749e81d2fa2fdcda2732e284069fdd8469702da007eb6088df426cdb813b3ecc
            build: cd ironfish-rust-nodejs && yarn build && strip *.node

          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              cd ironfish-rust-nodejs
              yarn build --target=aarch64-apple-darwin
              strip -x *.node

          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            architecture: x64
            setup: |
              sudo apt-get update
              sudo apt-get install g++-aarch64-linux-gnu gcc-aarch64-linux-gnu -y
            build: |
              cd ironfish-rust-nodejs
              yarn build --target=aarch64-unknown-linux-gnu
              aarch64-linux-gnu-strip *.node

          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            architecture: x64
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust@sha256:749e81d2fa2fdcda2732e284069fdd8469702da007eb6088df426cdb813b3ecc
            build: |
              rustup target add aarch64-unknown-linux-musl
              cd ironfish-rust-nodejs
              yarn build --target=aarch64-unknown-linux-musl
              aarch64-linux-musl-strip *.node

    name: Build ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: '16.13.0'
          cache: yarn
          architecture: ${{ matrix.settings.architecture }}

      - name: Install
        uses: actions-rs/toolchain@v1
        if: ${{ !matrix.settings.docker }}
        with:
          profile: minimal
          target: ${{ matrix.settings.target }}

      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash

      - name: Install dependencies
        run: npm install --no-workspaces
        working-directory: ./ironfish-rust-nodejs

      - name: Build in Docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: -v ${{ env.HOME }}/.cargo/git:/root/.cargo/git -v ${{ env.HOME }}/.cargo/registry:/root/.cargo/registry -v ${{ github.workspace }}:/build -w /build
          run: ${{ matrix.settings.build }}

      - name: Build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ironfish-rust-nodejs/*.node
          if-no-files-found: error

  test:
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin

          - host: windows-latest
            target: x86_64-pc-windows-msvc

          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: node:16-slim

          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: node:16-alpine

          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs@sha256:b145122cb5e68d8133e0eef0395af490eab781a648c637e43522e7fa33e63970

          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker: arm64v8/node:16-alpine
            platform: linux/arm64/v8

    name: Test bindings for ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up QEMU for Docker
        if: ${{ matrix.settings.docker }}
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ./ironfish-rust-nodejs

      - name: Install dependencies
        run: npm install --no-workspaces
        working-directory: ./ironfish-rust-nodejs

      - name: Run tests in Docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: ${{ matrix.settings.platform && format('--platform {0}', matrix.settings.platform) || ''}} -v ${{ github.workspace }}:/build -w /build/ironfish-rust-nodejs
          run: |
            set -e
            npm run test:slow

      - name: Run tests natively
        if: ${{ !matrix.settings.docker }}
        run: npm run test:slow
        working-directory: ./ironfish-rust-nodejs

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - test
    defaults:
      run:
        working-directory: ./ironfish-rust-nodejs

    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'
          registry-url: 'https://registry.npmjs.org'
          cache: yarn

      - name: Install dependencies
        run: npm install --no-workspaces

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: ironfish-rust-nodejs/artifacts

      - name: List packages
        run: ls -R .
        shell: bash

      - name: Move and publish artifacts
        run: yarn artifacts

      - name: List packages
        run: ls -R ./npm

      - name: Publish
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
