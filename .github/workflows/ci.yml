name: Node.js CI

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.16.0'

      - name: Use wasm-pack
        uses: actions-rs/install@v0.1
        with:
          crate: wasm-pack
          version: latest
          use-tool-cache: true

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v1
        with:
          path: ironfish-wasm/target
          key: ${{ runner.os }}-stable-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Restore Yarn cache
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Build Wasm packages
        run: cd ironfish-wasm && yarn build

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --non-interactive --frozen-lockfile

      - name: Lint
        run: yarn lint

  test:
    name: Test

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password 
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.16.0'

      - name: Use wasm-pack
        uses: actions-rs/install@v0.1
        with:
          crate: wasm-pack
          version: latest
          use-tool-cache: true

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v1
        with:
          path: ironfish-wasm/target
          key: ${{ runner.os }}-stable-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Restore Yarn cache
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Run migrations
        run: cd ironfish-http-api-v2 && npx prisma migrate deploy
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/test

      - name: Build Wasm packages
        run: cd ironfish-wasm && yarn build

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --non-interactive --frozen-lockfile

      - name: Run tests
        run: yarn test:coverage
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/test

      - name: Upload coverage
        run: CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }} ROOT_PATH=$GITHUB_WORKSPACE/ yarn coverage:upload

  testslow:
    name: Slow Tests

    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.16.0'

      - name: Use wasm-pack
        uses: actions-rs/install@v0.1
        with:
          crate: wasm-pack
          version: latest
          use-tool-cache: true

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v1
        with:
          path: ironfish-wasm/target
          key: ${{ runner.os }}-stable-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Restore Yarn cache
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Build Wasm packages
        run: cd ironfish-wasm && yarn build

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --non-interactive --frozen-lockfile

      - name: Run slow tests & coverage
        run: yarn test:slow:coverage

      - name: Upload coverage
        run: CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }} ROOT_PATH=$GITHUB_WORKSPACE/ yarn coverage:upload
