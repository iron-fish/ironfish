name: Build @ironfish binaries

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          # - host: ubuntu-20.04
          #   target: x86_64-apple-darwin

          # - host: windows-latest
          #   target: x86_64-pc-windows-msvc

          # - host: ubuntu-20.04
          #   target: aarch64-apple-darwin

          # requires 20.04 because ironfish depends on openssl 1.1.1, new ubuntu only allows 3.x
          - host: ubuntu-20.04
            target: x86_64-unknown-linux-musl

          - host: ubuntu-20.04
            target: aarch64-unknown-linux-gnu

          - host: ubuntu-20.04
            target: aarch64-unknown-linux-musl

    name: Build ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.12.1'

      - name: npm init
        run: npm init -y
      
      - name: install dependencies
        run: npm install ironfish caxa@3.0.1

      - name: caxa package
        run: npx caxa --input . --output ${{ matrix.settings.target != 'x86_64-pc-windows-msvc' && 'ironfish' || 'ironfish.exe' }} -- "{{caxa}}/node_modules/.bin/node" "--enable-source-maps" "{{caxa}}/node_modules/.bin/ironfish"

      - name: Tar files
        run: tar -cvf ironfish.tar ironfish

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{ matrix.settings.target }}
          path: ironfish.tar
          if-no-files-found: error
